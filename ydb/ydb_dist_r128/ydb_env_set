#################################################################
#                                                               #
# Copyright (c) 2018-2019 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#                                                               #
#       This source code contains the intellectual property     #
#       of its copyright holder(s), and is made available       #
#       under a license.  If you do not know the terms of       #
#       the license, please stop and do not read further.       #
#                                                               #
#################################################################
# Usage: source "/ydb/ydb_dist_r128"/ydb_env_set
# Sets up environment for single-user use of YottaDB with reasonable defaults.
# Explicitly specify ydb_chset=UTF-8 before running this for UTF-8 mode.
# System administrators should adapt as appropriate for more complex multi-user and production environments.

# Function to save selected environment variables

# Save ydb_passwd / gtm_passwd and ydb_chset / gtm_chset if defined because
# this script executes in M mode and makes no database accesses
# Need to distinguish between $ydb_passwd / $gtm_passwd not set at all vs. set to null string
# export not needed because these are only used when sourcing this file
if [ ! -z "${ydb_passwd+isset}" ] ; then ydb_tmp_ydb_passwd=$ydb_passwd ; fi
if [ ! -z "${gtm_passwd+isset}" ] ; then ydb_tmp_gtm_passwd=$gtm_passwd ; fi

# Save the character set, since the %YDBENV program always runs in M mode
# even though it generates environment variables for either M or UTF-8 mode.
# Need to be exported because set^%YDBENV uses them.
if [ ! -z "$ydb_chset" ] ; then export ydb_tmp_ydb_chset=$ydb_chset ; fi
if [ ! -z "$gtm_chset" ] ; then export ydb_tmp_gtm_chset=$gtm_chset ; fi

# Save ydb_routines / gtmroutines if defined because this script
# needs to ensure that it executes the %YDBENV in $ydb_dist / $gtm_dist.
# Need to be exported because set^%YDBENV uses them.
if [ ! -z "$ydb_routines" ] ; then export ydb_tmp_routines="$ydb_routines" ; fi
if [ ! -z "$gtmroutines" ] ; then export ydb_tmp_gtmroutines="$gtmroutines" ; fi

# Save ydb_dist / gtm_dist so that they can be saved by %YDBENV and restored when ydb_env_uset is run
if [ ! -z "$ydb_dist" ] ; then export ydb_tmp_ydb_dist=$ydb_dist ; fi
if [ ! -z "$gtm_dist" ] ; then export ydb_tmp_gtm_dist=$gtm_dist ; fi

# Clear environment variables that might interfere with correct operation of %YDBENV
unset ydb_chset ydb_dist ydb_passwd ydb_routines gtm_chset gtm_dist gtm_passwd gtmroutines

# Run command to generate environment
ydb_tmp_env=`mktemp -d -t ydb_env_$$_XXXXXX`
if "/ydb/ydb_dist_r128"/yottadb -run set^%YDBENV 1>$ydb_tmp_env/out 2>$ydb_tmp_env/err ; then
    . $ydb_tmp_env/out
    if [ "UTF-8" = "$ydb_chset" ] ; then
	export ydb_icu_version=`pkg-config --modversion icu-io`
	export gtm_icu_version=$ydb_icu_version
    else unset ydb_icu_version gtm_icu_version
    fi
    rm -rf $ydb_tmp_env
else
    echo Error file at $ydb_tmp_env is:
    cat $ydb_tmp_env/err
fi

# Restore ydb_passwd / gtm_passwd if either was set
if [ ! -z "${ydb_tmp_ydb_passwd+isset}" ] ; then export ydb_passwd=$ydb_tmp_ydb_passwd ; fi
if [ ! -z "${ydb_tmp_gtm_passwd+isset}" ] ; then export gtm_passwd=$ydb_tmp_gtm_passwd ; fi

# Clear temporary variables used in this file
unset ydb_tmp_env ydb_tmp_gtm_chset ydb_tmp_gtm_passwd ydb_tmp_gtmroutines ydb_tmp_ydb_chset ydb_tmp_ydb_passwd ydb_tmp_routines
